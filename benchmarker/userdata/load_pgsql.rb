#!/usr/bin/env ruby

# how to install ruby-pg
#
# brew install postgresql@15
# echo 'export PATH="/opt/homebrew/opt/postgresql@15/bin:$PATH"' >> ~/.zshrc
# sudo gem install pg -- --with-pg-config=$(which pg_config)
#require 'mysql2'
require 'pg'

require 'digest'
require 'date'

rand = Random.new(1)

def digest(src)
  Digest::SHA512.hexdigest(src)
end

def calculate_salt(account_name)
  digest account_name
end

def calculate_passhash(password, account_name)
  digest "#{password}:#{calculate_salt(account_name)}"
end


puts "imgディレクトリに画像を展開"
#`curl -L -O https://github.com/catatsuy/private-isu/releases/download/img/img.zip`
#`unzip img.zip`

kaomoji = File.read('kaomoji.txt').strip().split("\n")

# db = Mysql2::Client.new(
#   host: 'localhost',
#   port: 3306,
#   username: 'root',
#   password: '',
#   database: 'isuconp',
#   encoding: 'utf8mb4',
#   reconnect: true,
# )
# db.query_options.merge!(symbolize_keys: true)

db = PG.connect(
  host: 'localhost',
  port: 15432,
  dbname: 'isuconp',
  user: 'isucon',
  password: 'isucon'
)

puts "schema.sqlを読み込む"
File.read('../sql/schema_pgsql.sql').split(';').each do |sql|
  puts sql
  db.exec(sql) unless sql.strip == ''
end

# CREATE TABLE users (
#   id integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
#   account_name varchar(64) NOT NULL UNIQUE,
#   passhash varchar(128) NOT NULL, -- SHA2 512 non-binary (hex)
#   authority smallint NOT NULL DEFAULT 0,
#   del_flg smallint NOT NULL DEFAULT 0,
#   created_at timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
# );

puts "users"

#query = db.prepare('INSERT INTO users (id,account_name,passhash,authority,del_flg,created_at) VALUES (?,?,?,?,?,?)')
open('names.txt') do |f|
  f.each_line.with_index(1) do |line,i|
    account_name = line.chomp
    password = account_name * 2

    passhash = calculate_passhash(password, account_name)

    authority = i < 10 ? 1 : 0
    del_flg = ((i >= 10) && (i % 50 == 0)) ? 1 : 0
    created_at = DateTime.parse('2016-01-01 00:00:00') + (1.to_r / 24 / 60 / 60 * i) # 毎秒1アカウント作られたことにする

    #query.execute(i, account_name, passhash, authority, del_flg, created_at.to_time)
    db.exec_params('INSERT INTO users (id,account_name,passhash,authority,del_flg,created_at) VALUES ($1,$2,$3,$4,$5,$6)',
                      [i, account_name, passhash, authority, del_flg, created_at.to_time])
    p i if i % 20 == 0
  end
end

# CREATE TABLE posts (
#   id integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
#   user_id integer NOT NULL,
#   mime varchar(64) NOT NULL,
#   imgdata bytea NOT NULL,
#   body text NOT NULL,
#   created_at timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
# );

puts "posts"

#query = db.prepare('INSERT INTO posts (id,user_id,mime,imgdata,body,created_at) VALUES (?,?,?,?,?,?)')

Dir.glob("img/*").shuffle(random: rand).each.with_index(1) do |image, i|
  user_id = rand.rand(1..1000)
  mime = image.end_with?('.jpg') ? 'image/jpeg' : image.end_with?('.png') ? 'image/png' : 'image/gif'
  created_at = DateTime.parse('2016-01-02 00:00:00') + (1.to_r / 24 / 60 / 60 * i) # 毎秒1投稿されたことにする
  body = kaomoji[rand.rand(0...kaomoji.length)]

  open(image) do |f|
    #query.execute(i, user_id, mime, f.read, body, created_at.to_time)
    db.exec_params('INSERT INTO posts (id,user_id,mime,imgdata,body,created_at) VALUES ($1,$2,$3,$4,$5,$6)',
    [i, user_id, mime, f, body, created_at.to_time])
  end

  p i if i % 100 == 0
end

# DROP TABLE IF EXISTS comments;
# CREATE TABLE comments (
#   id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
#   post_id integer NOT NULL,
#   user_id integer NOT NULL,
#   comment text NOT NULL,
#   created_at timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
# );

puts "comments"

#query = db.prepare('INSERT INTO comments (id,post_id,user_id,comment,created_at) VALUES (?,?,?,?,?)')

1.upto(100_000).each do |i|
  post_id = rand.rand(1..10000)
  user_id = rand.rand(1..1000)
  comment = kaomoji[rand.rand(0...kaomoji.length)]
  created_at = DateTime.parse('2016-01-03 00:00:00') + (1.to_r / 24 / 60 / 60 * i) # 毎秒1コメントされたことにする

  #query.execute(i, post_id, user_id, comment, created_at.to_time)
  db.exec_params('INSERT INTO comments (id,post_id,user_id,comment,created_at) VALUES ($1,$2,$3,$4,$5)',
  [i, post_id, user_id, comment, created_at.to_time])

  p i if i % 100 == 0
end

db.close

#puts "mysqldumpを出力して圧縮"
#`mysqldump -u root -h localhost --hex-blob --add-drop-database --databases isuconp | bzip2 > dump.sql.bz2`
puts "pg_dumpを出力して圧縮"
`pg_dump -U isucon -h localhost -p 15432 isuconp | bzip2 > dump.sql.bz2`
